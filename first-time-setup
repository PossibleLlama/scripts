#! /bin/bash

USERNAME=$1
EMAIL=$2

ALIASES_FILE="$HOME/.bash_aliases" # Store aliases and useful functions
SECRETS_FILE="$HOME/.bash_secrets" # Store API keys and environment variables

line_break() {
    FILE_NAME=$1
    echo "" >> $FILE_NAME
}

write_to_file() {
    FILE_NAME=$1
    CONTENTS=$2
    echo "${CONTENTS}" >> $FILE_NAME
}

create_function() {
    FUNCTION_NAME=$1
    ADDITIONAL_EXEC=$2

    write_to_file $ALIASES_FILE "${FUNCTION_NAME} () {"
    write_to_file $ALIASES_FILE "    echo \"TODO\""

    if [ ! -z "$ADDITIONAL_EXEC" ]; then
        write_to_file $ALIASES_FILE "    ${ADDITIONAL_EXEC}"
    fi

    write_to_file $ALIASES_FILE "}"
    line_break $ALIASES_FILE
}

add_alias() {
    ALIAS_NAME=$1
    ALIAS_FUNCTION=$2

    write_to_file $ALIASES_FILE "alias ${ALIAS_NAME}=\"${ALIAS_FUNCTION}\""
}

create_file_if_none_exist() {
    FILE_NAME=$1
    if [ ! -f $FILE_NAME ]; then
        touch $FILE_NAME
        echo "Creating ${FILE_NAME}"
    fi
}

# ------------------------------
# Installations

apt-get install gnupg
apt-get install xclip

# ------------------------------
# Aliases
echo "Starting to create aliases"

create_file_if_none_exist $ALIASES_FILE
create_file_if_none_exist $SECRETS_FILE

write_to_file $ALIASES_FILE "export PATH=\"\$PATH:$(pwd)\""
line_break $ALIASES_FILE

add_alias "ls" "ls -l"
line_break $ALIASES_FILE

add_alias "gita"        "git add"
add_alias "gitaa"       "git add --all"
add_alias "gitc"        "git commit -m "
add_alias "gitpl"       "git pull --prune"
add_alias "gitps"       "git push"
add_alias "gits"        "git status"
add_alias "gitl"        "git log --oneline"
line_break $ALIASES_FILE

add_alias "python"      "python3"

add_alias "ss"          "ss -tulpn"
add_alias "gpg-list"    "gpg --list-secret-keys --keyid-format LONG"

write_to_file $ALIASES_FILE "source ${SECRETS_FILE}"

create_function "morning"
create_function "night" "shutdown now"

source $ALIASES_FILE

# ------------------------------
# Key signing
echo "Starting to generate GPG key"

GPG_FILE="/tmp/gpg-key-gen"

cat >$GPG_FILE <<EOF
    %echo "Generating key"
    Key-Type: default
    Subkey-Type: default
    Key-Length: 4096
    Name-Real: $USERNAME
    Name-Email: $EMAIL
    Expire-Date: 2y
    %no-protection
    %commit
    %echo "Finished generating key"
EOF

gpg --batch --generate-key $GPG_FILE
rm $GPG_FILE

# ------------------------------
# Git
echo "Starting to configure git"

git config --global user.name $USERNAME
git config --global user.email $EMAIL

git config --global commit.gpgsign true
git config --global core.editor "vim"
git config --global color.ui auto

gpg --armor --export $EMAIL | xclip -sel clip
xdg-open https://github.com/settings/gpg/new
