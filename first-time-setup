#! /bin/bash
# curl -L -o first-time-setup https://raw.githubusercontent.com/PossibleLlama/scripts/main/first-time-setup

USERNAME=$1
EMAIL=$2

ALIASES_FILE="$HOME/.bash_aliases" # Store aliases and useful functions
SECRETS_FILE="$HOME/.bash_secrets" # Store API keys and environment variables

line_break() {
    FILE_NAME=$1
    echo "" >> $FILE_NAME
}

write_to_file() {
    FILE_NAME=$1
    CONTENTS=$2
    echo "${CONTENTS}" >> $FILE_NAME
}

create_function() {
    FUNCTION_NAME=$1
    ADDITIONAL_EXEC=$2

    write_to_file $ALIASES_FILE "${FUNCTION_NAME} () {"
    write_to_file $ALIASES_FILE "    echo \"TODO\""

    if [ ! -z "$ADDITIONAL_EXEC" ]; then
        write_to_file $ALIASES_FILE "    ${ADDITIONAL_EXEC}"
    fi

    write_to_file $ALIASES_FILE "}"
    line_break $ALIASES_FILE
}

add_alias() {
    ALIAS_NAME=$1
    ALIAS_FUNCTION=$2

    write_to_file $ALIASES_FILE "alias ${ALIAS_NAME}=\"${ALIAS_FUNCTION}\""
}

create_file_if_none_exist() {
    FILE_NAME=$1
    if [ ! -f $FILE_NAME ]; then
        touch $FILE_NAME
        echo "Creating ${FILE_NAME}"
    fi
}

# ------------------------------
# Installations

sudo apt-get install curl
sudo apt-get install gnupg
sudo apt-get install gnupg-agent
sudo apt-get install libgconf-2-4
sudo apt-get install mime-support
sudo apt-get install dpkg-dev
sudo apt-get install debhelper
sudo apt-get install build-essential
sudo apt-get install xclip
sudo apt-get install npm
sudo apt-get install jq
sudo apt-get install awscli

# ------------------------------
# Misc
echo "Creating symlink to project directory"
mkdir ~/Documents/projects
sudo ln -s /projects ~/Documents/projects
mkdir ~/Documents/software
mkdir ~/Documents/software/exec

# ------------------------------
# Aliases
echo "Starting to create aliases"

create_file_if_none_exist $ALIASES_FILE
create_file_if_none_exist $SECRETS_FILE

write_to_file $ALIASES_FILE "export PATH=\"\$PATH:$(pwd)\""
write_to_file $ALIASES_FILE "export PATH=\"\$PATH:$HOME/Documents/software/exec\""
line_break $ALIASES_FILE
write_to_file $ALIASES_FILE "export NVM_DIR=\"$HOME/.nvm\""
line_break $ALIASES_FILE
write_to_file $ALIASES_FILE "[ -s \"$HOME/.nvm/nvm.sh\" ] && \. \"$HOME/.nvm/nvm.sh\""
line_break $ALIASES_FILE

add_alias "ls" "ls -l"
line_break $ALIASES_FILE

add_alias "gita"        "git add"
add_alias "gitaa"       "git add --all"
add_alias "gitc"        "git commit -m "
add_alias "gitpl"       "git pull --prune"
add_alias "gitps"       "git push"
add_alias "gits"        "git status"
add_alias "gitl"        "git log --oneline"
add_alias "gitlg"       "git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --branches --remotes --tags"
line_break $ALIASES_FILE

add_alias "python"      "python3"

add_alias "ss"          "ss -tulpn"
add_alias "gpg-list"    "gpg --list-secret-keys --keyid-format LONG"
add_alias "hello"       "ping 8.8.8.8" # Ping google
line_break $ALIASES_FILE

write_to_file $ALIASES_FILE "DB_NAME=\"local-testing-db\""
add_alias "db-start"    "docker run -d -p 27017:27017 --name=\"$DB_NAME\" mongo"
add_alias "db-stop"     "docker stop $DB_NAME && docker rm $DB_NAME"
line_break $ALIASES_FILE

write_to_file $ALIASES_FILE "#alias postman=\"nohup $HOME/Documents/software/Postman/Postman &>/dev/null &\""
line_break $ALIASES_FILE

create_function "morning"
create_function "night" "shutdown now"
create_function "monthly" "sudo apt update && sudo apt autoremove"

line_break $ALIASES_FILE
write_to_file $ALIASES_FILE "source ${SECRETS_FILE}"
line_break $ALIASES_FILE

source $ALIASES_FILE

# ------------------------------
# Key signing
echo "Starting to generate SSH key"

ssh-keygen -f "$HOME/.ssh/id_ecdsa" -t ecdsa -b 521 <<< "\n"
ssh-keygen -f "$HOME/.ssh/id_rsa" -t rsa -b 4096 <<< "\n"
ssh-add -l

echo "Starting to generate GPG key"

GPG_FILE="/tmp/gpg-key-gen"

cat >$GPG_FILE <<EOF
    %echo "Generating key"
    Key-Type: default
    Subkey-Type: default
    Key-Length: 4096
    Name-Real: $USERNAME
    Name-Email: $EMAIL
    Expire-Date: 2y
    %no-protection
    %commit
    %echo "Finished generating key"
EOF

gpg --batch --generate-key $GPG_FILE
rm $GPG_FILE

# ------------------------------
# Git
echo "Starting to configure git"

git config --global user.name $USERNAME
git config --global user.email $EMAIL

git config --global commit.gpgsign true
git config --global core.editor "vim"
git config --global color.ui auto
git config --global remote.origin.prune true

gpg --armor --export $EMAIL | xclip -sel clip
xdg-open https://github.com/settings/gpg/new

cat $HOME/.ssh/id_rsa.pub | xclip -sel clip
xdg-open https://github.com/settings/ssh/new

echo "" | xclip -sel clip

# ------------------------------
# Docker
echo "Configuring Docker"

sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -csu) \
   stable"

sudo apt-get install apt-transport-https 
sudo apt-get install ca-certificates
sudo apt-get install software-properties-common
sudo apt-get install docker.io

# ------------------------------
# Node
echo "Starting to configure node"

NVM_VERSION="0.37.2"

curl -o- "https://raw.githubusercontent.com/nvm-sh/nvm/v$NVM_VERSION/install.sh" | bash

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

nvm install --lts
npm i -g npm

echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

# curl -L -o ~/Downloads/dbeaver https://dbeaver.io/files/dbeaver-ce_latest_amd64.deb
# sudo dpkg -i ~/Downloads/dbeaver
# https://dbeaver.io/download/
# https://www.mongodb.com/try/download/compass
# https://www.postman.com/downloads/
